[project]
name = "h5ad2cbioportaldb"
version = "0.1.0"
description = "Import h5ad single-cell files into cBioPortal ClickHouse database with intelligent sample/patient mapping"
authors = [
    {name = "h5ad2cbioportaldb", email = "info@example.com"},
]
dependencies = [
    "click>=8.1.0",
    "scanpy>=1.9.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "pyyaml>=6.0",
    "clickhouse-connect>=0.6.0",
    "anndata>=0.9.0",
    "h5py>=3.8.0",
]
requires-python = ">=3.9"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "testcontainers[clickhouse]>=3.7.0",
    "hypothesis>=6.70.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
h5ad2cbioportaldb = "h5ad2cbioportaldb.cli:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
line-length = 88
target-version = "py39"
select = ["E", "F", "W", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["S101", "S104", "S311", "PLR0913", "PLR2004"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=h5ad2cbioportaldb --cov-report=term-missing"
testpaths = [
    "tests",
]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "benchmark: marks tests as benchmarks",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]